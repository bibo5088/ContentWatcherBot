// <auto-generated />
using System;
using ContentWatcherBot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContentWatcherBot.Migrations
{
    [DbContext(typeof(WatcherContext))]
    [Migration("20191021154624_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview1.19506.2");

            modelBuilder.Entity("ContentWatcherBot.Database.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("ContentWatcherBot.Database.ServerWatcher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WatcherId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WatcherId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("WatcherId1");

                    b.ToTable("ServerWatchers");
                });

            modelBuilder.Entity("ContentWatcherBot.Database.Watcher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Param")
                        .HasColumnType("TEXT");

                    b.Property<string>("PreviousContentIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Watchers");
                });

            modelBuilder.Entity("ContentWatcherBot.Database.ServerWatcher", b =>
                {
                    b.HasOne("ContentWatcherBot.Database.Server", "Server")
                        .WithMany("ServerWatchers")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContentWatcherBot.Database.Watcher", "Watcher")
                        .WithMany("ServerWatchers")
                        .HasForeignKey("WatcherId1");
                });
#pragma warning restore 612, 618
        }
    }
}
